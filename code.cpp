#include<iostream>
#include<vector>
#include<string>
#include<Windows.h>

bool zxc = false;

int menu() {//Меню в виде цикла

    int a;

    std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;
    std::cout << "|\t\t\t\t\tДобро пожаловать в игру 'Поле чудес!'\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t1.Начать играть\t\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t2.Об игре (правила)\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t3.Выход\t\t\t\t\t\t\t|" << std::endl;
    std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;

    std::cin >> a;
    if (a != 1 && a != 2 && a != 3)
    {
        if (!std::cin)
        {
            std::cout << "Нужны не буквы, а цифры!! Пока" << std::endl;
            exit(0);
        }
        std::cout << "Что ты вводишь? Выбери один из 3 вариантов" << std::endl;
        return 2;
    }
    else
    {
        switch (a)
        {
        case 1:
        {
            system("cls");
            return 1;
        }

        case 2:
        {
            std::cout << "Капитал-шоу “Поле чудес” – советская и российская телеигра, российский аналог американской телевизионной программы “Колесо Фортуны”. Художественный руководитель и ведущий программы – Леонид Якубович. Производитель — Телекомпания “ВИD”. Загадывается слово, твоя задача угадать его последовательно по буквам. Важно: могут быть слова с дефисами вместо букв, а также ответы, загаданные из более чем одного слова, следует писать слитно! У тебя будет описание слова и пара бонусов. На всю игру дается 10 попыток" << std::endl;
            return 2;
        }
        case 3:
        {
            std::cout << "До встречи!!!" << std::endl;
            zxc = !zxc;
            return 3;
        }
        }

    }
}

int kategorii()
{
    int k;

    std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;
    std::cout << "|\t\t\t\t\tВыбери категорию:\t\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t1.Животные\t\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t2.Страны\t\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t3.Техника и изобретения\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t4.Известные личности\t\t\t\t\t|" << std::endl;
    std::cout << "|\t\t\t\t\t\t5.Кино и мультфильмы\t\t\t\t\t|" << std::endl;
    std::cout << "---------------------------------------------------------------------------------------------------------" << std::endl;

    std::cin >> k;
    if (k < 1 || k > 5)
    {
        if (!std::cin)
        {
            std::cout << "Нужны не буквы, а цифры!! Пока" << std::endl;
            exit(0);
        }
        std::cout << "Что ты вводишь? Выбери один из 5 вариантов" << std::endl;
        exit(0);
    }
    else
    {
        switch (k)
        {
        case 1:
        {
            system("cls");
            return 1;
        }
        case 2:
        {
            system("cls");
            return 2;
        }
        case 3:
        {
            system("cls");
            return 3;
        }
        case 4:
        {
            system("cls");
            return 4;
        }
        case 5:
        {
            system("cls");
            return 5;
        }
        }
    }
}

std::string strperson(int random) {
    std::string text[] = {
        "Этот русский учёный создал периодическую таблицу химических элементов.",
        "Легендарный полководец, не проигравший ни одной битвы.",
        "Первый человек, побывавший в космосе.",
        "Автор романа 'Война и мир'.",
        "Великий композитор, написавший 'Лунную сонату'.",
        "Создатель теории относительности."
    };
    std::cout << text[random] << std::endl;

    std::string word[] = { "менделеев", "суворов", "гагарин", "толстой", "бетховен", "эйнштейн" };
    return word[random];
}

std::string strcinema(int random) {
    std::string text[] = {
        "Мультфильм про говорящую свинку, которая любит грязь.",
        "Фильм про мальчика, который выжил.",
        "Диснеевская принцесса с длинными волосами, заточенная в башне.",
        "Знаменитый робот-мальчик из мультфильма, который хотел стать настоящим.",
        "Герой комиксов, который носит маску и сражается с преступностью ночью.",
        "Мультфильм про игрушечного ковбоя и космонавта."
    };
    std::cout << text[random] << std::endl;

    std::string word[] = { "пеппа", "гаррипоттер", "рапунцель", "валл-и", "бэтмен", "историяигрушек" };
    return word[random];
}

std::string stranimal(int random) {

    std::string text[] = { "Какое существо может задержать дыхание на 6 суток? (не рыба)",
                          "Какое живое существо может спать, не просыпаясь 3 года?",
                          "У какого живого существа кровь синего цвета?",
                          "Какое животное может переварить стальной гвоздь?",
                          "Какое животное одновременно дает молоко и откладывает яйца?",
                          "Какая самая крупная птица на Земле?" };
    std::cout << text[random] << std::endl;

    std::string word[] = { "скорпион", "улитка", "осьминог", "крокодил", "утконос", "страус" };
    return word[random];
}

std::string strcountry(int random) {

    std::string text[] = { "Какая страна не имеет столицы?",
                          "Какая страна мира имеет две столицы?",
                          "В какой стране живут белые слоны?",
                          "В какой стране мира наибольшее число людей, пользующихся мобильными телефонами?",
                          "В какой стране мира больше всего вегетарианцев?",
                          "По одной из версий, название этой страны с одного из древних языков можно перевести как берег кроликов" };
    std::cout << text[random] << std::endl;

    std::string word[] = { "науру", "боливия", "таиланд", "китай", "индия", "испания" };
    return word[random];
}

std::string strtechnology(int random) {
    std::string text[] = {
        "Первая в мире поисковая система, появившаяся в 1990-х.",
        "Устройство, которое печатает цифровые изображения на бумаге.",
        "Этот гаджет изобрела компания Apple в 2007 году.",
        "Первый искусственный спутник Земли, запущенный в 1957 году.",
        "Социальная сеть, где публикуют короткие видео.",
        "Электронное устройство для хранения и обработки информации."
    };
    std::cout << text[random] << std::endl;

    std::string word[] = { "яндекс", "принтер", "айфон", "спутник-1", "тикток", "компьютер" };
    return word[random];
}

int illustrationwrong(int hits) {//Визуализация при ошибках
    int yacub = rand() % 6 + 1;
    switch (yacub) {
    case 1: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                  Увы и ах!    *\n"
            "*           (-m-)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*     Такой буквы здесь нет!    *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 2: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что вы говорите!  *\n"
            "*           (~_~)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*       Вот! Такой буквы нет!   *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 3: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Да ладно?!    *\n"
            "*           (;-Д-)              *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*          О! Нет её!           *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 4: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Посмотрим...  *\n"
            "*           (>_<)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*         Неправильно!          *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 5: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*               Мама мия...     *\n"
            "*           (T=T)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*         А буквы-то нет!       *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 6:
    {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что там у нас...  *\n"
            "*           (0_0)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*         Такой буквы в         *\n"
            "*          слове нет!           *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    }
    return hits;
}

void illustrationright() {
    int yacub = rand() % 6 + 1;
    switch (yacub) {
    case 1: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                Так так...     *\n"
            "*           ('-'*)              *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*        Откройте букву!        *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 2: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что вы говорите!  *\n"
            "*           (^_^)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*      Вот! Такая буква есть!   *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 3: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Да ладно?!    *\n"
            "*           (О_о)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*          Правильно!           *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 4: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 Посмотрим...  *\n"
            "*           (>о<)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*       Есть такая буква!       *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 5: {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*                 И это...      *\n"
            "*           (uwu)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*       Правильная буква!       *\n"
            "*                               *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }

    case 6:
    {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*             Что там у нас...  *\n"
            "*           (6_6)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*                               *\n"
            "*        Может скажете          *\n"
            "*        полное слово?          *\n"
            "*********************************\n"
            "*                               *\n";
        break;
    }
    }
}

int letterFill(char guess, std::string secretword, std::string& guessword)
{
    int i;
    int matches = 0;
    int len = secretword.length();
    for (i = 0; i < len; i++)
    {
        if (guess == guessword[i])
            return 0;
        if (guess == secretword[i])
        {
            guessword[i] = guess;
            matches++;
        }
    }
    return matches;
}

void gameplace(int random, int k) {
    std::string striing;
    char letter;
    std::string used;
    int durachok = 0;
    int wrong_guess = 0;

    switch (k) {
    case 1: striing = stranimal(random); break;
    case 2: striing = strcountry(random); break;
    case 3: striing = strtechnology(random); break;
    case 4: striing = strperson(random); break;
    case 5: striing = strcinema(random); break;

    }

    std::string unknown(striing.length(), '*');

    while (wrong_guess < 10)//Цикл в котором будут процессы до того пока количество ошибок < 10

    {
        std::cout << "\n\n" << unknown << std::endl;

        std::cin >> letter;
        std::cout << " " << std::endl;
        for (int i = 0; i < used.length(); i++)
        {
            if (letter == used[i]) {
                std::cout << "Вы уже вводили такую букву, попробуйте другую" << std::endl;
                durachok++;
            }
        }
        if (durachok == 0) {
            used.push_back(letter);
            used.push_back(' ');
            std::cout << "Использованные буквы: [" << used << "]" << std::endl;

            if (letterFill(letter, striing, unknown) == 0)
            {
                illustrationwrong(wrong_guess++);
            }
            else
            {
                illustrationright();
            }

            std::cout << "У вас осталось " << 10 - wrong_guess << " попыток" << std::endl;
            std::cout << " " << std::endl;

            if (striing == unknown)
            {
                std::cout << striing << std::endl;
                std::cout << "*********************************\n"
                    "*                               *\n"
                    "*                               *\n"
                    "*                               *\n"
                    "*             И вы выиграли...  *\n"
                    "*           ($_$)               *\n"
                    "*           / | \\               *\n"
                    "*             |                 *\n"
                    "*            / |                *\n"
                    "*                               *\n"
                    "*        Автомобиль!!!          *\n"
                    "*         Поздравляю!           *\n"
                    "*********************************\n"
                    "*                               *\n";
                break;
            }
        }
        durachok = 0;
    }
    if (wrong_guess == 10)
    {
        std::cout << "*********************************\n"
            "*                               *\n"
            "*                               *\n"
            "*                               *\n"
            "*              Вы проиграли...  *\n"
            "*           (Т_Т)               *\n"
            "*           / | \\               *\n"
            "*             |                 *\n"
            "*            / |                *\n"
            "*  но в скрижалях «Поля Чудес»  *\n"
            "*    вы навсегда остаетесь      *\n"
            "*        победителем!           *\n"
            "*********************************\n"
            "*                               *\n";
        std::cout << "Было загадано слово : " << striing << std::endl;
    }

    std::cin.ignore();
    std::cin.get();
}

int main()
{
    srand(time(NULL));
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);

    do {
        if (menu() == 1) {//Цикл где идет проверка если пользователь ввел 1 то генерируем число во все функции и запускаем игровой цикл
            int k = kategorii();
            int random = 1 + rand() % 6;
            gameplace(random, k);
        }
    } while (zxc == false);
}
